name: Build Release Binaries

on:
  release:
    types: [created]
  push:
    tags:
      - 'v*'

jobs:
  build-binaries:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: dynatrace-log-tui-linux
            binary_name: dynatrace-log-tui
          - os: windows-latest
            asset_name: dynatrace-log-tui-windows
            binary_name: dynatrace-log-tui.exe
          - os: macos-latest
            asset_name: dynatrace-log-tui-macos
            binary_name: dynatrace-log-tui

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -e .

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --onefile --name ${{ matrix.binary_name }} --add-data="src/dynatrace_log_tui:dynatrace_log_tui" main.py

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ./dist/${{ matrix.binary_name }}

      - name: Upload binary to release (if release event)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/${{ matrix.binary_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
